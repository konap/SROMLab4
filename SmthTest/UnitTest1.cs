using NUnit.Framework;
using Polinomial_Basis;


namespace SmthTest
{
    [TestFixture]
    public class UnitTest1
    {
        [Test]

        [TestCase("01011110001111101000000011111111110000110101000100101111001011011000111110100100100000000101110100110101111110110101111001000110010010000001100001010110110000110101101011100",
             "11110100100000110110001000111011111100100111111111010110111100101001110011011101011001000001110011101101011011110010110111101011010111000111111000101111111101110100111011000",
             "10101010101111011110001011000100001100010010111011111001110111110001001101111001111001000100000111011000100101000111001110101101000101000110011001111001001101000001010000100")]

        public void AdditionTests(string numb1, string numb2, string expected)
        {
            // Arrange
            var hex11 = Program.BinStr_ToByte(numb1);
            var hex22 = Program.BinStr_ToByte(numb2);

            var answer = Program.Add(hex11, hex22);

            Assert.AreEqual(expected, Program.Byte_To_Binary_String(answer));
        }



    }
}

